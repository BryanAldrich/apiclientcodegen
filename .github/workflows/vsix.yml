name: VSIX

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '.github/workflows/**'
      - '!.github/workflows/vsix.yml'
      - 'docs/**'
      - 'test/**'
      - 'build/**'
      - 'images/**'
      - 'README.md'
      - 'src/CLI/ApiClientCodeGen.CLI*/**'
      - 'src/VSMac/ApiClientCodeGen.VSMac*/**'
      - 'src/*.json'
      - 'src/*.ps1'
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  schedule:
    - cron:  '0 8 * * *'

env:
  VERSION: 1.4.${{ github.run_number }}

jobs:
  build:
    name: Build
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2

    - name: Update VSIX Version
      run: |
        ((Get-Content -Path VSIX/ApiClientCodeGen.VSIX/source.extension.vsixmanifest -Raw) -Replace "1.0.0", "${{ env.VERSION }}") | Set-Content -Path VSIX/ApiClientCodeGen.VSIX/source.extension.vsixmanifest
        ((Get-Content -Path VSIX/ApiClientCodeGen.VSIX.Dev17/source.extension.vsixmanifest -Raw) -Replace "1.0.0", "${{ env.VERSION }}") | Set-Content -Path VSIX/ApiClientCodeGen.VSIX.Dev17/source.extension.vsixmanifest
      working-directory: src
      shell: pwsh

    - name: Cake Build
      run: powershell ./build.ps1 --target All
      working-directory: src

    - name: Move build output
      run: |
        mv src/VSIX/ApiClientCodeGen.VSIX/bin/Release/ApiClientCodeGenerator.vsix ApiClientCodeGenerator-${{ env.VERSION }}.vsix
        mv src/VSIX/ApiClientCodeGen.VSIX.Dev17/bin/Release/ApiClientCodeGenerator.vsix ApiClientCodeGenerator-VS2022-${{ env.VERSION }}.vsix

    - name: Publish artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Artifacts
        path: |
          *.vsix
          docs/Marketplace*.md
  
  analyze:
    name: Analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"christianhelle_apiclientcodegen" /o:"christianhelle-github" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io"
          <insert_your_clean_build_command>
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
