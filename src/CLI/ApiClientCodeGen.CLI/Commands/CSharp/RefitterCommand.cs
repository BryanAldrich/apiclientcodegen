using McMaster.Extensions.CommandLineUtils;
using Rapicgen.Core;
using Rapicgen.Core.Generators;
using Rapicgen.Core.Generators.Refitter;
using Rapicgen.Core.Logging;
using Rapicgen.Core.Options.Refitter;

namespace Rapicgen.CLI.Commands.CSharp;

[Command("refitter", Description = "Refitter (v0.4.1)")]
public class RefitterCommand : CodeGeneratorCommand, IRefitterOptions
{
    public RefitterCommand(
        IConsoleOutput console,
        IProgressReporter? progressReporter)
        : base(console, progressReporter)
    {
    }

    public override ICodeGenerator CreateGenerator() =>
        new RefitterCodeGenerator(SwaggerFile, DefaultNamespace);
    
    [Option(
        LongName = "generateContracts",
        Description = "Set this to FALSE to skip generating the contract types (default: TRUE)")]
    public bool GenerateContracts { get; set; }
    
    [Option(
        LongName = "generateXmlDocCodeComments",
        Description = "Set this to FALSE to skip generating XML doc style code comments (default: TRUE)")]
    public bool GenerateXmlDocCodeComments { get; set; }
    
    [Option(
        LongName = "autoGeneratedHeader",
        Description = "Set this to FALSE to skip generating <auto-generated> headers in C# files (default: TRUE)")]
    public bool AddAutoGeneratedHeader { get; set; }
    
    [Option(
        ShortName = "c",
        LongName = "generateContracts",
        Description = "Set this to FALSE to skip generating the contract types (default: TRUE)")]
    public bool ReturnIApiResponse { get; set; }
}